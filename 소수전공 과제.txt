과제-일요일 오후 9시까지 메일로 제출
1. 회문
회문은 앞으로 읽어도 뒤로 읽어도 똑같이 읽히는 단어입니다. 어떤 단어 str이 회문인지 검사하는 함수를 만드세요.
배열이 아니라 포인터를 사용해서 함수를 구현하세요.
bool is_palindrome(char* str)
{
//여기를 채우기
}
회문의 예시: level, racecar
회문인 단어 하나와 회문이 아닌 단어 하나를 넣어서 각각 1 0 이 나와야 합니다.


2. 전투 시뮬레이션
Player와 Monster 클래스를 만들어 서로가 싸우는걸 시뮬레이션해 보세요. 
누가 이기고 누가 죽든 상관 없습니다. 임의로 함수를 호출해서 구성해도 좋습니다.
랜덤을 알고 있다면 랜덤을 사용해 시뮬레이션해보세요.
각 클래스가 꼭 구현해야 하는 함수는 다음과 같습니다.
- is_dead : 이 유닛이 죽었는지 여부를 반환합니다
- attack : Player는 Monster에게 Monster는 Player에게 데미지를 줍니다
- 각 클래스는 각각 고유한 공격 스킬 하나를 가지고 있어야 합니다

어제 수업한 전방 선언 관련 설명에서 오류가 있었습니다.
 class Weapon;이라고 해도 클래스 내부에 관련된 정보는 없기 때문에 
Weapon*같이 내부 정보가 필요없는 포인터는 동작하지만, Weapon&이나 Weapon은 
내부 정보를 필요로 하기 때문에 전방선언만으로는 순서가 바뀐 문제를 해결해주지
 못합니다. 이번 숙제 2번은 레퍼런스가 아니라 포인터로 구현해주세요.
